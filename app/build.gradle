plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'kotlin-parcelize'
}

apply from: 'shaderConsts.gradle'

android {
  namespace 'zatrit.skinbread'
  compileSdk targetSdk

  defaultConfig {
    applicationId 'zatrit.skinbread'
    testApplicationId "${applicationId}.test"

    minSdk 29
    targetSdk targetSdk
    versionCode 7
    versionName '1.6'

    resConfigs 'en', 'ru'

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      debuggable false
      proguardFiles 'proguard-rules.pro', 'modified-android-optimize.pro'
    }

    staging {
      initWith release
      signingConfig signingConfigs.debug
    }
  }

  packagingOptions {
    exclude '**/kotlin-tooling-metadata.json'
    exclude '**/kotlin/**'
    exclude 'META-INF/**'

    dex {
      useLegacyPackaging true
    }
  }

  compileOptions {
    sourceCompatibility javaVersion
    targetCompatibility javaVersion
  }

  kotlinOptions {
    jvmTarget = project.java_version
    // https://www.guardsquare.com/blog/eliminating-data-leaks-caused-by-kotlin-assertions
    freeCompilerArgs += ['-Xno-call-assertions',
                         '-Xno-receiver-assertions',
                         '-Xno-param-assertions']
  }

  testOptions {
    reportDir "$rootDir/test-reports"
    resultsDir "$rootDir/test-results"
  }
}

dependencies {
  implementation project(':skinlib')

  testImplementation libs.test.kotlin
  testImplementation libs.json

  androidTestImplementation libs.test.core
  androidTestImplementation libs.test.runner
  androidTestImplementation libs.test.rules
}
